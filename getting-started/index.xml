<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Getting-starteds on PROS</title>
    <link>https://pros.cs.purdue.edu/getting-started/index.xml</link>
    <description>Recent content in Getting-starteds on PROS</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Released under the MPL 2.0 license</copyright>
    <atom:link href="https://pros.cs.purdue.edu/getting-started/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Getting Started with PROS</title>
      <link>https://pros.cs.purdue.edu/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pros.cs.purdue.edu/getting-started/</guid>
      <description>

&lt;h2 id=&#34;first-steps&#34;&gt;First Steps&lt;/h2&gt;

&lt;p&gt;The most important characteristic of PROS to note when getting started is that PROS is just C. Anything that works in standard C will work as a part of a PROS project, and similarly the errors given for code that doesn&amp;rsquo;t work will match errors given for any similar C code. Learning C is essential for using PROS.&lt;/p&gt;

&lt;p&gt;If you are already familiar with C development outside of VEX, skip ahead to &lt;a href=&#34;#using-PROS&#34;&gt;Using PROS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you have not used PROS or done non-VEX C code development before, checking out these following C tutorials is highly recommended.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.studytonight.com/c/user-defined-functions-in-c.php&#34;&gt;Functions&lt;/a&gt;. C is a language that heavily emphasizes functions, and knowing how they work is essential to using PROS. The &lt;a href=&#34;https://pros.cs.purdue.edu/api/&#34;&gt;PROS API&lt;/a&gt; is a set of functions, so any time that you want to interact with a sensor or motor, you&amp;rsquo;re using functions.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.tutorialspoint.com/cprogramming/c_header_files.htm&#34;&gt;Header Files&lt;/a&gt;. The PROS template (the set of files automatically created when you start a PROS project) contains a couple of header files, and it&amp;rsquo;s recommended that you make additional header files as you develop your code. Header files contain the declarations for functions and global variables (among other things), which is why the &lt;a href=&#34;https://pros.cs.purdue.edu/api/&#34;&gt;PROS API&lt;/a&gt; can be found in &lt;code&gt;API.h&lt;/code&gt;. Knowing what code should go in a header file (&lt;code&gt;.h&lt;/code&gt;) or a source file (&lt;code&gt;.c&lt;/code&gt;) can be difficult to determine at first, but it is a very useful skill to learn.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.codingunit.com/printf-format-specifiers-format-conversions-and-formatted-output&#34;&gt;&lt;code&gt;printf()&lt;/code&gt;&lt;/a&gt;. At some point when developing PROS code, you will likely want to get some feedback on what the value of a variable is. This is not an exact replacement for a full debugging utility by any means, but is the standard method for troubleshooting issues in most languages and can be used for viewing sensor values or your own variables&amp;rsquo; values. The output from these &lt;code&gt;printf()&lt;/code&gt; statements can be viewed in the terminal by running &lt;code&gt;pros terminal&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And then for additional C tutorial topics, visit &lt;a href=&#34;https://www.cprogramming.com/tutorial/c-tutorial.html&#34;&gt;CProgramming.com&lt;/a&gt; or &lt;a href=&#34;http://www.studytonight.com/c/overview-of-c.php&#34;&gt;StudyTonight&lt;/a&gt;. A good video tutorial series (as opposed to the previous text-based tutorials) can be found on &lt;a href=&#34;https://youtu.be/nXvy5900m3M&#34;&gt;YouTube&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;using-PROS&#34;&gt;I know C, now how do I use PROS?&lt;/h2&gt;

&lt;p&gt;The PROS tutorials are designed to show the application of C programming to a PROS project. The &lt;a href=&#34;https://pros.cs.purdue.edu/tutorials/clawbot/&#34;&gt;Programming the Clawbot&lt;/a&gt; tutorial is a great place to start, as it goes through every step of putting together a sample PROS project. Once you are ready to branch out and create your own custom project, looking through the following tutorials is recommended:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://pros.cs.purdue.edu/tutorials/project-structure/&#34;&gt;PROS Project Structure&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://pros.cs.purdue.edu/tutorials/uploading/&#34;&gt;Uploading Code&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://pros.cs.purdue.edu/tutorials/debugging/&#34;&gt;Debugging&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://pros.cs.purdue.edu/tutorials/coding-faq/&#34;&gt;Coding FAQs&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And then you can find tutorials for specific subjects from &lt;a href=&#34;https://pros.cs.purdue.edu/tutorials/analog/&#34;&gt;analog sensors&lt;/a&gt; to &lt;a href=&#34;https://pros.cs.purdue.edu/tutorials/tasks/&#34;&gt;tasks and multithreading&lt;/a&gt; as well.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Installing on Windows</title>
      <link>https://pros.cs.purdue.edu/getting-started/windows/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pros.cs.purdue.edu/getting-started/windows/</guid>
      <description>

&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;

&lt;p&gt;PROS for Atom is the new best way to program for VEX Robotics. Getting started with PROS is easy on Windows.&lt;/p&gt;

&lt;p&gt;To begin, &lt;a href=&#34;https://github.com/purduesigbots/pros/releases/latest&#34;&gt;download&lt;/a&gt; and run the installer. Please note that an Internet connection is required throughout the installation process.&lt;/p&gt;

&lt;p&gt;Most users will wish to complete the typical installation process, which will install the PROS Core components (the PROS CLI and GCC toolchain) and PROS Editor. If you already have Atom installed, you may opt to not install PROS Editor and install the PROS plugin on your installation of Atom.&lt;/p&gt;

&lt;p&gt;If VEX drivers haven&amp;rsquo;t previously been installed, you will be prompted to install the official drivers released by VEX.&lt;/p&gt;

&lt;p&gt;Once the installation is completed, Atom can be started via the Start Menu or Desktop shortcut.&lt;/p&gt;

&lt;h2 id=&#34;issues-and-notes-about-installation&#34;&gt;Issues and Notes about Installation&lt;/h2&gt;

&lt;h2 id=&#34;install-long-path&#34;&gt;Error reading from file when installing&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Since 2.6.0&lt;/em&gt;
When installing PROS on Windows, you may receive a warning box along the lines of:
&amp;gt; There was an error reading from file &amp;ldquo;&amp;hellip;&amp;rdquo;. Verify that the file exists and you can access it.
In most cases, this is because the file length is too long due to a limitation of Windows. Move the installer to a folder closer to the root directory of the drive, such as C:\pros-temp.&lt;/p&gt;

&lt;h3 id=&#34;apm-failure&#34;&gt;APM Failure&lt;/h3&gt;

&lt;p&gt;During some installations, Atom may not install correctly. This is best diagnosed by there not being shortcuts to
Atom after installation, or if &lt;code&gt;apm&lt;/code&gt; isn&amp;rsquo;t on PATH. If this is the case, you may need to manually install Atom by visiting
&lt;a href=&#34;https://atom.io/download/windows&#34;&gt;https://atom.io/download/windows&lt;/a&gt;. Once installed and Atom appears, you will be able to install the PROS plugin by pressing
&lt;strong&gt;Win&lt;/strong&gt;+&lt;strong&gt;R&lt;/strong&gt; and entering &lt;code&gt;apm install file-icons linter tool-bar tool-bar-main busy build platformio-ide-terminal pros&lt;/code&gt;. If you are still having trouble after installing Atom manually, it may be necessary to add Atom to &lt;code&gt;PATH&lt;/code&gt; manually as well. To do so, follow these instructions:
1. Find the location of atom.exe. One good way of doing this is by right clicking on the Atom shortcut on your dekstop, clicking &amp;lsquo;Open File Location,&amp;rsquo; and copying the path from the Explorer address bar.
2. Windows 7/8/8.1:
  1. Open the Start menu
  2. Right click on &amp;lsquo;Computer&amp;rsquo;
  3. Select &amp;lsquo;Properties&amp;rsquo;
  4. Click &amp;lsquo;Advanced System Settings&amp;rsquo;
  5. Click &amp;lsquo;Environment Variables&amp;rsquo;
  6. Select &amp;lsquo;PATH&amp;rsquo; under &amp;lsquo;User Variables,&amp;rsquo; then click &amp;lsquo;Edit&amp;rsquo;
  7. Add a semicolon (&lt;code&gt;;&lt;/code&gt;) to the end of the value, then paste in the path to atom.exe
  8. Click &amp;lsquo;OK&amp;rsquo;
3. Windows 10:
  1. Type &amp;lsquo;Environment Variables&amp;rsquo; into the search bar
  2. Select &amp;lsquo;Edit environment variables for your account
  3. Select &amp;lsquo;Path&amp;rsquo; in the upper box
  4. Click &amp;lsquo;Edit,&amp;rsquo; then click &amp;lsquo;New&amp;rsquo;
  5. Paste in the path to atom.exe
  6. Click &amp;lsquo;OK&amp;rsquo;&lt;/p&gt;

&lt;h3 id=&#34;installing-alongside-pros-for-eclipse&#34;&gt;Installing alongside PROS for Eclipse&lt;/h3&gt;

&lt;p&gt;It is possible to install Atom alongside Eclipse, if you have previously installed Eclipse. However, the uninstall utility for
PROS for Eclipse will remove all the contents in &lt;code&gt;C:\Program Files\PROS&lt;/code&gt;, so the new version of PROS will also be affected.
If you decide to remove Eclipse but want to keep the PROS Core components, either run the PROS for Eclipse uninstall utility and
reinstall/repair the new version of PROS or manually delete all files/folders in &lt;code&gt;C:\Program Files\PROS&lt;/code&gt; except: &lt;code&gt;C:\Program Files\PROS\cli-64&lt;/code&gt;
(or just &lt;code&gt;cli&lt;/code&gt; if x86), &lt;code&gt;C:\Program Files\PROS\toolchain&lt;/code&gt;, &lt;code&gt;C:\Program Files\PROS\updater.exe&lt;/code&gt;, and &lt;code&gt;C:\Program Files\PROS\updater.ini&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Installing on macOS</title>
      <link>https://pros.cs.purdue.edu/getting-started/os-x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pros.cs.purdue.edu/getting-started/os-x/</guid>
      <description>

&lt;h2 id=&#34;installation-instructions&#34;&gt;Installation Instructions&lt;/h2&gt;

&lt;p&gt;Installing PROS on macOS could not be easier with our custom built installer! Just follow these instructions:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install &lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;Python 3&lt;/a&gt;(Version 3.4 or higher) for macOS.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Download the &lt;a href=&#34;https://github.com/purduesigbots/pros/releases/tag/2.11.0&#34;&gt;PROS installer&lt;/a&gt; and run it. You will need to input an administrator&amp;rsquo;s password, and must remain connected to the internet for the duration of installation. The installer will download Atom.app and the Arm toolchain to &lt;code&gt;/Applications/PROS_2.0&lt;/code&gt;, and will use pip3 to install the command line interface. You will be able to see the progress of the installer in a Terminal window automatically openned by the installer.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Open Atom (&lt;code&gt;/Applications/PROS_2.0/Atom.app&lt;/code&gt;) and verify that PROS appears in the menu (Likely next to Help).&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Congratulations! You have successfully installed PROS for macOS. If you want autocomlete functionality within Atom for your PROS code, download either &lt;a href=&#34;https://itunes.apple.com/us/app/xcode/id497799835?mt=12#&#34;&gt;Xcode&lt;/a&gt; or &lt;a href=&#34;http://llvm.org&#34;&gt;LLVM&lt;/a&gt;. Xcode is easier to install than LLVM, but you must open the application at least once and its command line tools must be installed.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;requirements&#34;&gt;Requirements&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Minimum OS version:     10.8&lt;/li&gt;
&lt;li&gt;Minimum Python Version:     3.4&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;known-issues&#34;&gt;Known issues&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Downloading code to the cortex must be done through the programming kit. You cannot download code through a direct tether.&lt;/li&gt;
&lt;li&gt;Atom may be unable to update itself when saved in &lt;code&gt;/Applications&lt;/code&gt;. If this is the case, move it to &lt;code&gt;~/Desktop&lt;/code&gt;, &lt;code&gt;~/Applications&lt;/code&gt;, or any other folder owned by your current user.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Installing on Linux</title>
      <link>https://pros.cs.purdue.edu/getting-started/debian-linux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pros.cs.purdue.edu/getting-started/debian-linux/</guid>
      <description>

&lt;h2 id=&#34;installer-binaries&#34;&gt;Installer binaries&lt;/h2&gt;

&lt;p&gt;If you are installing on a Debian-based Linux distribution, such as Ubuntu, or have a distribution which can install Debian packages, you should download the provided packages from the &lt;a href=&#34;https://github.com/purduesigbots/pros/releases/latest&#34;&gt;latest release&lt;/a&gt;. The PROS Core package provides the PROS CLI and Arm Embedded GCC Toolchain. The PROS Editor package provides our rebranded version of Atom. Most users will install both, although the PROS Core package is always required.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; When using PROS for linux you cannot program or interact with a cortex directly tethered via A-A. This is a &lt;a href=&#34;https://pros.cs.purdue.edu/known-issues/#linuxAA&#34;&gt;known issue&lt;/a&gt; with a simple solution.&lt;/p&gt;

&lt;h2 id=&#34;other-distro-installation-requirements&#34;&gt;Other Distro Installation Requirements&lt;/h2&gt;

&lt;p&gt;To follows these instructions you need an operating system on your machine which is not Windows. We recommend the latest version of Ubuntu LTS. If you choose to not use Ubuntu LTS be sure that the flavor of linux you are using has support for the following packages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atom.io/&#34;&gt;Atom 1.10.x+&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;git 2.x&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://llvm.org/releases/download.html&#34;&gt;clang 3.9.0+&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://launchpad.net/gcc-arm-embedded/+download&#34;&gt;gcc-arm-none-eabi 4.7.1+&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;python3 3.5+&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;python3-pip&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once you have downloaded and install all those packages type the following command to install the PROS atom plugins:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apm install file-icons linter tool-bar tool-bar-main busy build pros
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Upon completion open Atom and it will finish the setup process. Now you are all set to use PROS!!!&lt;/p&gt;

&lt;p&gt;If you have any issues with these instructions be sure to report the issues on our &lt;a href=&#34;https://github.com/purduesigbots/pros-atom&#34;&gt;github project&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>